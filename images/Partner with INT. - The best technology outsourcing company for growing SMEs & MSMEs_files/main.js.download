var body = document.body;

// $(window).load(function() {
// 	//alertViewPort();
//     $('#preloader').fadeOut();
// });

$(document).on("ready", function () {
  $("#preloader").fadeOut();

  setInterval(function () {
    body.classList.add("bfsi");
    //$("#header").find(".header_inner").addClass("draggd");
  }, 100);

  $(".tech-carousl").slick({
    dots: false,
    arrows: false,
    infinite: false,
    speed: 300,
    fade: false,
    slidesToShow: 8,
    slidesToScroll: 1,
    focusOnSelect: true,
    mobileFirst: false,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          dots: true,
          slidesToShow: 5,
          slidesToScroll: 5,
          infinite: true,
          dots: true,
        },
      },
      {
        breakpoint: 767,
        settings: {
          dots: true,
          slidesToShow: 4,
          slidesToScroll: 4,
        },
      },
      {
        breakpoint: 480,
        settings: {
          dots: true,
          slidesToShow: 2,
          slidesToScroll: 2,
        },
      },
      // You can unslick at a given breakpoint now by adding:
      // settings: "unslick"
      // instead of a settings object
    ],
  });
  
  $(".customer-carousel").slick({
      dots: true,
      arrows: false,
      infinite: false,
      speed: 300,
      autoplay: true,
      autoplaySpeed: 5000,
      slidesToShow: 9,
      slidesToScroll: 9,
      lazyLoad: "ondemand",
      responsive: [
        {
          breakpoint: 1280,
          settings: {
            dots: true,
            slidesToShow: 4,
            slidesToScroll: 4,
          },
        },
        {
          breakpoint: 1050,
          settings: {
            dots: true,
            slidesToShow: 3,
            slidesToScroll: 3,
          },
        },
        {
          breakpoint: 990,
          settings: {
            dots: true,
            slidesToShow: 2,
            slidesToScroll: 2,
          },
        },
        {
          breakpoint: 480,
          settings: {
            dots: true,
            slidesToShow: 1,
            slidesToScroll: 1,
          },
        },
      ],
    });

  $("a.get_in_touch").on("click", function (event) {
    event.preventDefault();
    var hash = this.hash;
    $("html, body").animate(
      {
        scrollTop: $(hash).offset().top,
      },
      900
    );
  });
});

$(window).scroll(function () {
  if ($(this).scrollTop() > 50) {
    $("#header").addClass("_scrolled");
  } else {
    $("#header").removeClass("_scrolled");
  }
});

$(window).resize(function (e) {
  //alertViewPort();
  // if (window.matchMedia("(max-width: 1024px)").matches) {
  //     $('.solution-carousl').slick('unslick');
  // }
});

(function ($) {
  $.fn.extend({
    easyResponsiveTabs: function (options) {
      //Set the default values, use comma to separate the settings, example:
      var defaults = {
        type: "default", //default, vertical, accordion;
        width: "auto",
        fit: true,
        closed: "accordion", // Start closed if in accordion view
        activate: function () {},
      };
      //Variables
      var options = $.extend(defaults, options);
      var opt = options,
        jtype = opt.type,
        jfit = opt.fit,
        jwidth = opt.width,
        vtabs = "vertical",
        accord = "accordion";

      //Events
      $(this).bind("tabactivate", function (e, currentTab) {
        if (typeof options.activate === "function") {
          options.activate.call(currentTab, e);
        }
      });

      //Main function
      this.each(function () {
        var $respTabs = $(this);
        var $respTabsList = $respTabs.find("ul.resp-tabs-list");
        $respTabs.find("ul.resp-tabs-list li").addClass("resp-tab-item");
        $respTabs.css({
          display: "block",
          width: jwidth,
        });

        $respTabs
          .find(".resp-tabs-container > div")
          .addClass("resp-tab-content");
        jtab_options();
        //Properties Function
        function jtab_options() {
          if (jtype == vtabs) {
            $respTabs.addClass("resp-vtabs");
          }
          if (jfit == true) {
            $respTabs.css({ width: "100%", margin: "0px" });
          }
          if (jtype == accord) {
            $respTabs.addClass("resp-easy-accordion");
            $respTabs.find(".resp-tabs-list").css("display", "none");
          }
        }

        //Assigning the h2 markup to accordion title
        var $tabItemh2;
        $respTabs
          .find(".resp-tab-content")
          .before(
            "<h2 class='resp-accordion' role='tab'><span class='resp-arrow'></span></h2>"
          );

        var itemCount = 0;
        $respTabs.find(".resp-accordion").each(function () {
          $tabItemh2 = $(this);
          var innertext = $respTabs
            .find(".resp-tab-item:eq(" + itemCount + ")")
            .html();
          $respTabs
            .find(".resp-accordion:eq(" + itemCount + ")")
            .append(innertext);
          $tabItemh2.attr("aria-controls", "tab_item-" + itemCount);
          itemCount++;
        });

        //Assigning the 'aria-controls' to Tab items
        var count = 0,
          $tabContent;
        $respTabs.find(".resp-tab-item").each(function () {
          $tabItem = $(this);
          $tabItem.attr("aria-controls", "tab_item-" + count);
          $tabItem.attr("role", "tab");

          //First active tab, keep closed if option = 'closed' or option is 'accordion' and the element is in accordion mode
          if (
            options.closed !== true &&
            !(
              options.closed === "accordion" && !$respTabsList.is(":visible")
            ) &&
            !(options.closed === "tabs" && $respTabsList.is(":visible"))
          ) {
            $respTabs
              .find(".resp-tab-item")
              .first()
              .addClass("resp-tab-active");
            $respTabs
              .find(".resp-accordion")
              .first()
              .addClass("resp-tab-active");
            $respTabs
              .find(".resp-tab-content")
              .first()
              .addClass("resp-tab-content-active")
              .attr("style", "display:block");
          }

          //Assigning the 'aria-labelledby' attr to tab-content
          var tabcount = 0;
          $respTabs.find(".resp-tab-content").each(function () {
            $tabContent = $(this);
            $tabContent.attr("aria-labelledby", "tab_item-" + tabcount);
            tabcount++;
          });
          count++;
        });

        //Tab Click action function
        $respTabs.find("[role=tab]").each(function () {
          var $currentTab = $(this);
          $currentTab.click(function () {
            var $tabAria = $currentTab.attr("aria-controls");

            if (
              $currentTab.hasClass("resp-accordion") &&
              $currentTab.hasClass("resp-tab-active")
            ) {
              $respTabs
                .find(".resp-tab-content-active")
                .slideUp("", function () {
                  $(this).addClass("resp-accordion-closed");
                });
              $currentTab.removeClass("resp-tab-active");
              return false;
            }
            if (
              !$currentTab.hasClass("resp-tab-active") &&
              $currentTab.hasClass("resp-accordion")
            ) {
              $respTabs.find(".resp-tab-active").removeClass("resp-tab-active");
              $respTabs
                .find(".resp-tab-content-active")
                .slideUp()
                .removeClass("resp-tab-content-active resp-accordion-closed");
              $respTabs
                .find("[aria-controls=" + $tabAria + "]")
                .addClass("resp-tab-active");

              $respTabs
                .find(".resp-tab-content[aria-labelledby = " + $tabAria + "]")
                .slideDown()
                .addClass("resp-tab-content-active");
            } else {
              $respTabs.find(".resp-tab-active").removeClass("resp-tab-active");
              $respTabs
                .find(".resp-tab-content-active")
                .removeAttr("style")
                .removeClass("resp-tab-content-active")
                .removeClass("resp-accordion-closed");
              $respTabs
                .find("[aria-controls=" + $tabAria + "]")
                .addClass("resp-tab-active");
              $respTabs
                .find(".resp-tab-content[aria-labelledby = " + $tabAria + "]")
                .addClass("resp-tab-content-active")
                .attr("style", "display:block");
            }
            //Trigger tab activation event
            $currentTab.trigger("tabactivate", $currentTab);
          });
          //Window resize function
          $(window).resize(function () {
            $respTabs.find(".resp-accordion-closed").removeAttr("style");
          });
        });
      });
    },
  });
})(jQuery);

$(window).scroll(countrScroll);
var viewed = false;

function isScrolledIntoView(elem) {
  var docViewTop = $(window).scrollTop();
  var docViewBottom = docViewTop + $(window).height();

  var elemTop = $(elem).offset().top;
  var elemBottom = elemTop + $(elem).height();

  return elemBottom <= docViewBottom && elemTop >= docViewTop;
}

function countrScroll() {
  if (isScrolledIntoView($("#counter")) && !viewed) {
    viewed = true;
    $(".value").each(function () {
      $(this)
        .prop("Counter", 0)
        .animate(
          {
            Counter: $(this).text(),
          },
          {
            duration: 4000,
            easing: "swing",
            step: function (now) {
              $(this).text(Math.ceil(now));
            },
          }
        );
    });
  }
}

$(document).ready(function () {
  $("#succStoryTab").easyResponsiveTabs({
    type: "default", //Types: default, vertical, accordion
    width: "auto", //auto or any width like 600px
    closed: "accordion", // Start closed if in accordion view
    fit: true, // 100% fit in a container
    //closed: 'accordion', // Start closed if in accordion view
    activate: function (event) {
      // Callback function if tab is switched
      var $tab = $(this);
      var $info = $("#tabInfo");
      var $name = $("span", $info);
      $name.text($tab.text());
      $info.show();
    },
  });
  
  var date = new Date().getFullYear();
  document.getElementById("cyear").innerHTML = date;

  //if (Modernizr.webp) {
  //    $('body').addClass('webp');
  //} else {
  //    $('body').addClass('no-webp');
  //}
});
